C51 COMPILER V9.54   EEPROM                                                                03/13/2020 08:50:40 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN .\Objects\EEPROM.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE EEPROM.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\EE
                    -PROM.lst) TABS(2) OBJECT(.\Objects\EEPROM.obj)

line level    source

   1          #include <REGX52.H>
   2          #include <INTRINS.H>
   3          #define somenop {_nop_();_nop_();_nop_();_nop_();_nop_();}
   4          sbit SDA = 0xA6; /* 数据线 */
   5          sbit SCL = 0xA5; /* 控制线 */
   6          char a;          //a为读出的数据
   7          void todelay(int z)
   8          {
   9   1        int x, y;
  10   1        for (x = z; x > 0; x--)
  11   1          for (y = 110; y > 0; y--)
  12   1            ;
  13   1      }
  14          //启动
  15          void IIC_Start(void)
  16          {
  17   1      
  18   1        SDA = 1;
  19   1        SCL = 1;
  20   1        somenop;
  21   1        SDA = 0;
  22   1        somenop;
  23   1        SCL = 0;
  24   1      }
  25          //停止
  26          void IIC_Stop(void)
  27          {
  28   1        SDA = 0;
  29   1        SCL = 1;
  30   1        somenop;
  31   1        SDA = 1;
  32   1      }
  33          //等待响应
  34          bit IIC_WaitAck(void)
  35          {
  36   1        SDA = 1;
  37   1        somenop;
  38   1        SCL = 1;
  39   1        somenop;
  40   1        if (SDA)
  41   1        {
  42   2          SCL = 0;
  43   2          IIC_Stop();
  44   2          return 0;
  45   2        }
  46   1        else
  47   1        {
  48   2          SCL = 0;
  49   2          return 1;
  50   2        }
  51   1      }
  52          //发送一个字节
  53          void IIC_SendByte(unsigned char byt)
  54          {
C51 COMPILER V9.54   EEPROM                                                                03/13/2020 08:50:40 PAGE 2   

  55   1        unsigned char i;
  56   1        for (i = 0; i < 8; i++)
  57   1        {
  58   2          if (byt & 0x80)
  59   2          {
  60   3            SDA = 1;
  61   3          }
  62   2          else
  63   2          {
  64   3            SDA = 0;
  65   3          }
  66   2          somenop;
  67   2          SCL = 1;
  68   2          byt <<= 1;
  69   2          somenop;
  70   2          SCL = 0;
  71   2        }
  72   1      }
  73          //接收一个字节
  74          unsigned char IIC_RecByte(void)
  75          {
  76   1        unsigned char da;
  77   1        unsigned char i;
  78   1        for (i = 0; i < 8; i++)
  79   1        {
  80   2          SCL = 1;
  81   2          somenop;
  82   2          da <<= 1;
  83   2          if (SDA)
  84   2            da |= 0x01;
  85   2          SCL = 0;
  86   2          somenop;
  87   2        }
  88   1        return da;
  89   1      }
  90          void rom_write(char add, da)
  91          {
  92   1        IIC_Start();
  93   1        IIC_SendByte(0xa0);
  94   1        IIC_WaitAck();
  95   1        IIC_SendByte(add);
  96   1        IIC_WaitAck();
  97   1        IIC_SendByte(da);
  98   1        IIC_WaitAck();
  99   1        IIC_Stop();
 100   1        todelay(5);
 101   1      }
 102          char rom_read(char add)
 103          {
 104   1        char t;
 105   1        IIC_Start();
 106   1        IIC_SendByte(0xa0);
 107   1        IIC_WaitAck();
 108   1        IIC_SendByte(add);
 109   1        IIC_WaitAck();
 110   1        IIC_Start();
 111   1        IIC_SendByte(0xa1);
 112   1        IIC_WaitAck();
 113   1        t = IIC_RecByte();
 114   1        return t;
 115   1        todelay(5);
 116   1      }
C51 COMPILER V9.54   EEPROM                                                                03/13/2020 08:50:40 PAGE 3   

*** WARNING C294 IN LINE 115 OF EEPROM.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    221    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
